" ~/.vimrc
" A modern Vim configuration for macOS development

" === Basic Settings ===
set nocompatible            " Disable vi compatibility
syntax enable               " Enable syntax processing
filetype plugin indent on   " Enable filetype detection and plugins

set encoding=utf-8          " Set UTF-8 encoding
set hidden                  " Hide buffers instead of closing
set number relativenumber   " Hybrid line numbers
set cursorline              " Highlight current line
set signcolumn=yes          " Always show sign column (for git gutter)
set tabstop=4               " Number of spaces per TAB
set softtabstop=4           " Number of spaces in tab when editing
set shiftwidth=4            " Number of spaces for autoindent
set expandtab               " Use spaces instead of tabs
set smartindent             " Better auto-indenting
set nowrap                  " Disable line wrapping
set mouse=a                 " Enable mouse support
set clipboard=unnamedplus   " Use system clipboard
set splitright              " Vertical splits open to the right
set splitbelow              " Horizontal splits open below
set ignorecase              " Case-insensitive search
set smartcase               " Case-sensitive if search contains uppercase
set incsearch               " Search as you type
set hlsearch                " Highlight matches
set termguicolors           " Enable true color support

" === Plugin Management (vim-plug) ===
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" IDE Features
Plug 'preservim/nerdtree'            " File explorer
Plug 'neoclide/coc.nvim', {'branch': 'release'} " Intellisense engine
Plug 'jiangmiao/auto-pairs'          " Automatic bracket pairing
Plug 'tpope/vim-commentary'          " Comment toggling
Plug 'tpope/vim-fugitive'            " Git integration
Plug 'airblade/vim-gitgutter'        " Git diff in gutter
Plug 'vim-airline/vim-airline'       " Status/tabline
Plug 'vim-airline/vim-airline-themes'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } } " Fuzzy finder
Plug 'junegunn/fzf.vim'
Plug 'mhinz/vim-startify'            " Fancy start screen

" Syntax/Language Support
Plug 'sheerun/vim-polyglot'          " Better syntax highlighting
Plug 'pangloss/vim-javascript'       " Enhanced JS support
Plug 'maxmellon/vim-jsx-pretty'      " JSX/TSX support
Plug 'leafgarland/typescript-vim'    " TypeScript support

" Themes
Plug 'morhetz/gruvbox'               " Popular color scheme
Plug 'arcticicestudio/nord-vim'      " Nord theme
Plug 'dracula/vim', { 'as': 'dracula' }

" Utilities
Plug 'mbbill/undotree'               " Visual undo history
Plug 'tpope/vim-surround'            " Surround text objects
Plug 'ryanoasis/vim-devicons'        " File type icons

call plug#end()

" === Plugin Configurations ===

" NERDTree
let NERDTreeShowHidden=1
nnoremap <C-n> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" COC (Intellisense)
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gr <Plug>(coc-references)
nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)
inoremap <silent><expr> <TAB> coc#pum#visible() ? coc#pum#confirm() : "\<C-g>u\<TAB>"

" FZF
nnoremap <C-p> :Files<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>rg :Rg<CR>

" Airline
let g:airline_powerline_fonts = 1
let g:airline_theme = 'nord'
let g:airline#extensions#tabline#enabled = 1

" Theme
colorscheme nord
set background=dark

" Undotree
nnoremap <leader>u :UndotreeToggle<CR>

" GitGutter
set updatetime=100

" === Key Bindings ===
let mapleader = " "       " Set space as leader key

" Window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Buffer management
nnoremap <leader>q :bd<CR>
nnoremap <leader>w :w<CR>

" Clear search highlights
nnoremap <leader>c :nohl<CR>

" === macOS Specific Settings ===
" Fix backspace in insert mode
set backspace=indent,eol,start

" === Auto Commands ===
" Automatically source vimrc on save
augroup autosourcing
  autocmd!
  autocmd BufWritePost .vimrc source %
augroup END

" Remove trailing whitespace on save
autocmd BufWritePre * %s/\s\+$//e
